/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LimitedToken, LimitedTokenInterface } from "../LimitedToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unlocked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isLimited",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405233600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600560146101000a81548160ff0219169083151502179055503480156200006d57600080fd5b5060405162001ae338038062001ae38339818101604052810190620000939190620001ff565b81818160039080519060200190620000ad929190620000d1565b508060049080519060200190620000c6929190620000d1565b505050505062000408565b828054620000df9062000319565b90600052602060002090601f0160209004810192826200010357600085556200014f565b82601f106200011e57805160ff19168380011785556200014f565b828001600101855582156200014f579182015b828111156200014e57825182559160200191906001019062000131565b5b5090506200015e919062000162565b5090565b5b808211156200017d57600081600090555060010162000163565b5090565b6000620001986200019284620002ad565b62000284565b905082815260208101848484011115620001b757620001b6620003e8565b5b620001c4848285620002e3565b509392505050565b600082601f830112620001e457620001e3620003e3565b5b8151620001f684826020860162000181565b91505092915050565b60008060408385031215620002195762000218620003f2565b5b600083015167ffffffffffffffff8111156200023a5762000239620003ed565b5b6200024885828601620001cc565b925050602083015167ffffffffffffffff8111156200026c576200026b620003ed565b5b6200027a85828601620001cc565b9150509250929050565b600062000290620002a3565b90506200029e82826200034f565b919050565b6000604051905090565b600067ffffffffffffffff821115620002cb57620002ca620003b4565b5b620002d682620003f7565b9050602081019050919050565b60005b8381101562000303578082015181840152602081019050620002e6565b8381111562000313576000848401525b50505050565b600060028204905060018216806200033257607f821691505b6020821081141562000349576200034862000385565b5b50919050565b6200035a82620003f7565b810181811067ffffffffffffffff821117156200037c576200037b620003b4565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6116cb80620004186000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063a69df4b511610066578063a69df4b514610275578063a9059cbb1461027f578063db5671fb146102af578063dd62ed3e146102cd576100ea565b80638da5cb5b1461020957806395d89b4114610227578063a457c2d714610245576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806370a08231146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102fd565b60405161010491906110d4565b60405180910390f35b61012760048036038101906101229190610eae565b61038f565b60405161013491906110b9565b60405180910390f35b6101456103ad565b6040516101529190611216565b60405180910390f35b61017560048036038101906101709190610e5b565b6103b7565b60405161018291906110b9565b60405180910390f35b6101936104af565b6040516101a09190611231565b60405180910390f35b6101c360048036038101906101be9190610eae565b6104b8565b6040516101d091906110b9565b60405180910390f35b6101f360048036038101906101ee9190610dee565b610564565b6040516102009190611216565b60405180910390f35b6102116105ac565b60405161021e919061109e565b60405180910390f35b61022f6105d6565b60405161023c91906110d4565b60405180910390f35b61025f600480360381019061025a9190610eae565b610668565b60405161026c91906110b9565b60405180910390f35b61027d610753565b005b61029960048036038101906102949190610eae565b61082c565b6040516102a691906110b9565b60405180910390f35b6102b761084a565b6040516102c491906110b9565b60405180910390f35b6102e760048036038101906102e29190610e1b565b610861565b6040516102f49190611216565b60405180910390f35b60606003805461030c90611346565b80601f016020809104026020016040519081016040528092919081815260200182805461033890611346565b80156103855780601f1061035a57610100808354040283529160200191610385565b820191906000526020600020905b81548152906001019060200180831161036857829003601f168201915b5050505050905090565b60006103a361039c6108e8565b84846108f0565b6001905092915050565b6000600254905090565b60006103c4848484610abb565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061040f6108e8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561048f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048690611196565b60405180910390fd5b6104a38561049b6108e8565b8584036108f0565b60019150509392505050565b60006012905090565b600061055a6104c56108e8565b8484600160006104d36108e8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105559190611268565b6108f0565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105e590611346565b80601f016020809104026020016040519081016040528092919081815260200182805461061190611346565b801561065e5780601f106106335761010080835404028352916020019161065e565b820191906000526020600020905b81548152906001019060200180831161064157829003601f168201915b5050505050905090565b600080600160006106776108e8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072b906111f6565b60405180910390fd5b61074861073f6108e8565b858584036108f0565b600191505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107da90611156565b60405180910390fd5b6000600560146101000a81548160ff0219169083151502179055507f19aad37188a1d3921e29eb3c66acf43d81975e107cb650d58cca878627955fd660405160405180910390a1565b60006108406108396108e8565b8484610abb565b6001905092915050565b6000600560149054906101000a900460ff16905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610960576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610957906111d6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c790611116565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610aae9190611216565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b22906111b6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b92906110f6565b60405180910390fd5b610ba6838383610d3c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2390611136565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cbf9190611268565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d239190611216565b60405180910390a3610d36848484610dbf565b50505050565b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610d7b5750610d7961084a565b155b610dba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db190611176565b60405180910390fd5b505050565b505050565b600081359050610dd381611667565b92915050565b600081359050610de88161167e565b92915050565b600060208284031215610e0457610e036113d6565b5b6000610e1284828501610dc4565b91505092915050565b60008060408385031215610e3257610e316113d6565b5b6000610e4085828601610dc4565b9250506020610e5185828601610dc4565b9150509250929050565b600080600060608486031215610e7457610e736113d6565b5b6000610e8286828701610dc4565b9350506020610e9386828701610dc4565b9250506040610ea486828701610dd9565b9150509250925092565b60008060408385031215610ec557610ec46113d6565b5b6000610ed385828601610dc4565b9250506020610ee485828601610dd9565b9150509250929050565b610ef7816112be565b82525050565b610f06816112d0565b82525050565b6000610f178261124c565b610f218185611257565b9350610f31818560208601611313565b610f3a816113db565b840191505092915050565b6000610f52602383611257565b9150610f5d826113ec565b604082019050919050565b6000610f75602283611257565b9150610f808261143b565b604082019050919050565b6000610f98602683611257565b9150610fa38261148a565b604082019050919050565b6000610fbb601183611257565b9150610fc6826114d9565b602082019050919050565b6000610fde601583611257565b9150610fe982611502565b602082019050919050565b6000611001602883611257565b915061100c8261152b565b604082019050919050565b6000611024602583611257565b915061102f8261157a565b604082019050919050565b6000611047602483611257565b9150611052826115c9565b604082019050919050565b600061106a602583611257565b915061107582611618565b604082019050919050565b611089816112fc565b82525050565b61109881611306565b82525050565b60006020820190506110b36000830184610eee565b92915050565b60006020820190506110ce6000830184610efd565b92915050565b600060208201905081810360008301526110ee8184610f0c565b905092915050565b6000602082019050818103600083015261110f81610f45565b9050919050565b6000602082019050818103600083015261112f81610f68565b9050919050565b6000602082019050818103600083015261114f81610f8b565b9050919050565b6000602082019050818103600083015261116f81610fae565b9050919050565b6000602082019050818103600083015261118f81610fd1565b9050919050565b600060208201905081810360008301526111af81610ff4565b9050919050565b600060208201905081810360008301526111cf81611017565b9050919050565b600060208201905081810360008301526111ef8161103a565b9050919050565b6000602082019050818103600083015261120f8161105d565b9050919050565b600060208201905061122b6000830184611080565b92915050565b6000602082019050611246600083018461108f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611273826112fc565b915061127e836112fc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112b3576112b2611378565b5b828201905092915050565b60006112c9826112dc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611331578082015181840152602081019050611316565b83811115611340576000848401525b50505050565b6000600282049050600182168061135e57607f821691505b60208210811415611372576113716113a7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f5065726d697373696f6e2044656e696564000000000000000000000000000000600082015250565b7f5472616e73666572206e6f7420616c6c6f7765642e0000000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b611670816112be565b811461167b57600080fd5b50565b611687816112fc565b811461169257600080fd5b5056fea26469706673582212200d8bb77aaccd39e20993b1e5eafcef8b2b063cc81ebe342ff17d1c4f31112f2464736f6c63430008070033";

type LimitedTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LimitedTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LimitedToken__factory extends ContractFactory {
  constructor(...args: LimitedTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LimitedToken> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<LimitedToken>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): LimitedToken {
    return super.attach(address) as LimitedToken;
  }
  connect(signer: Signer): LimitedToken__factory {
    return super.connect(signer) as LimitedToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimitedTokenInterface {
    return new utils.Interface(_abi) as LimitedTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LimitedToken {
    return new Contract(address, _abi, signerOrProvider) as LimitedToken;
  }
}
